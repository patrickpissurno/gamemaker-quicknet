<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.is_host = false;
qnet_client_connect(global.ip, global.port);

online_count = -1;

global.ds_map_instances_htc = ds_map_create(); //converts the host's instance ids to client's instance ids
global.ds_map_instances_cth = ds_map_create(); //converts the client's instance ids to host's instance ids
global.ds_map_x = ds_map_create();
global.ds_map_y = ds_map_create();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>qnet_client_disconnect();

ds_map_destroy(global.ds_map_instances_htc);
ds_map_destroy(global.ds_map_instances_cth);
ds_map_destroy(global.ds_map_x);
ds_map_destroy(global.ds_map_y);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Receive and process data
var data = "0";

do {
    data = qnet_client_queue_poll();
    if(data == "0" || data == "-1") //"0" means empty, "-1" means error
        continue;
    
    var parsed = qnet_parse_data(data);
    var key = parsed[0];
    var value = parsed[1];
    
    show_debug_message("KEY: '" + key + "', VALUE: '" + value + "'");
    
    switch(key)
    {
        case "online_count":
            online_count = real(value);
            break;
        case "instance_create":
            var instance_data = qnet_decode_array_number(value);
            var old_instance_id = global.ds_map_instances_htc[? string(instance_data[1])];
            if(is_undefined(old_instance_id))
            {
                var new_instance_id = instance_create(-100, -100, instance_data[0]);
                global.ds_map_instances_cth[? string(new_instance_id)] = instance_data[1];
                global.ds_map_instances_htc[? string(instance_data[1])] = new_instance_id;
            }
            break;
        case "instance_destroy":
            var old_instance_id = global.ds_map_instances_htc[? value];
            if(!is_undefined(old_instance_id))
            {
                if(instance_exists(old_instance_id))
                    instance_destroy(old_instance_id);
                ds_map_delete(global.ds_map_instances_cth, string(old_instance_id));
                ds_map_delete(global.ds_map_instances_htc, string(value));
            }
            break;
        default:
            var kmap = qnet_key_is_map(key, "ds_map_x");
            if(kmap != "")
                global.ds_map_x[? kmap] = real(value);
                
            kmap = qnet_key_is_map(key, "ds_map_y");
            if(kmap != "")
                global.ds_map_y[? kmap] = real(value);
            break;
    }
}
until(data == "0" || data == "-1");
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="3">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>instance_destroy();
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white);
draw_set_halign(fa_left);
draw_set_valign(fa_top);
draw_set_font(f_arial_18);

var player_id = qnet_client_get_id();
draw_text(20, 20, "Client (" + global.ip + ":" + global.port + ")#Online: " + string(online_count) + "#Player ID: " + string(player_id));
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
